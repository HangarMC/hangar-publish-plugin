name: "build"
on:
    push:
        branches: [ "**" ]
        tags-ignore: [ "**" ]
    pull_request:
    release:
        types: [ published ]
jobs:
    build:
        strategy:
            matrix:
                java: [ "17" ]
                os: [ "ubuntu-latest" ]
        # Only run on PRs if the source branch is on someone else's repo
        if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
        runs-on: "${{ matrix.os }}"
        steps:
            - name: "checkout repository"
              uses: "actions/checkout@v4"
            - name: "validate gradle wrapper"
              uses: gradle/wrapper-validation-action@v3
            - name: "setup jdk ${{ matrix.java }}"
              uses: "actions/setup-java@v4"
              with:
                  distribution: 'temurin'
                  java-version: "${{ matrix.java }}"
            - name: "setup gradle"
              uses: gradle/gradle-build-action@v2
            - name: "build"
              run: "./gradlew :plugin:build"
            - name: "determine status"
              run: |
                  if [ "$(./gradlew :plugin:properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
                    echo "STATUS=snapshot" >> $GITHUB_ENV
                  else
                    echo "STATUS=release" >> $GITHUB_ENV
                  fi
            - name: "publish snapshot"
              if: "${{ env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
              run: ./gradlew :plugin:publish
              env:
                  ORG_GRADLE_PROJECT_paperUsername: "${{ secrets.PAPER_REPO_USERNAME }}"
                  ORG_GRADLE_PROJECT_paperPassword: "${{ secrets.PAPER_REPO_PASSWORD }}"
            - name: "publish release"
              if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
              run: ./gradlew :plugin:publishPlugins
              env:
                  GRADLE_PUBLISH_KEY: "${{ secrets.GRADLE_PLUGIN_PORTAL_KEY }}"
                  GRADLE_PUBLISH_SECRET: "${{ secrets.GRADLE_PLUGIN_PORTAL_SECRET }}"
